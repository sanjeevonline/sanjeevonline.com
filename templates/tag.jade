extends layout

block content
  - var articles = _.chain(contents.articles._.directories).map(function(item) {
  -   // map articles to index pages of subdirectories of 'articles'
  -   return item.index
  - }).compact().sortBy(function(item) { // compact removes any directories w/o an index
  -   // sort them by date
  -   return -item.date
  - }).value() // and get all

  - var tags = []
  - function compressArray(original) {
  -	    var compressed = []
  -	    // make a copy of the input array
  -	    var copy = original.slice(0)
  -	    // first loop goes over every element
  -	    for (var i = 0; i < original.length; i++) {
  -		    var myCount = 0
  -		    // loop over every element in the copy and see if it's the same
  -		    for (var w = 0; w < copy.length; w++) {
  -		    	if (original[i] == copy[w]) {
  -			    	// increase amount of times duplicate is found
  -				    myCount++;
  - 				// sets item to undefined
  -	    			delete copy[w];
  -		    	}
  -		    }
  - 		if (myCount > 0) {
  -	    		var a = new Object();
  -		    	a.value = original[i];
  -			    a.count = myCount;
  - 			compressed.push(a);
  -	    	}
  -	    }
  -	    return compressed;
  - };

  - each article in articles
     - var tempArray = article.metadata.tags.split(',')
     - tags.push.apply(tags, tempArray)
  - var tagsarray = compressArray(tags)

  div.tags
     ul
        each tag in tagsarray
           li
             a.back(href='/tags/' + tag.value + '.html') #{tag.value}(#{tag.count})
  include author
  //- underscore helps us filter and sort our articles
  - var articles = _.chain(contents.articles._.directories).map(function(item) {
  -   // map articles to index pages of subdirectories of 'articles'
  -   return item.index
  - }).compact().sortBy(function(item) { // compact removes any directories w/o an index
  -   // sort them by date
  -   return -item.date
  - }).filter(function(item) { return item.metadata.tags.split(',').indexOf(page.title) != -1 }).value() // and finally take the first 5
  - var map = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
  each article in articles
    article.post.shadow
      header
        h2
          a(href=article.url)= article.title
        a.back(href='/archive.html') #{ map[article.date.getMonth()] } #{ article.date.toString().substring(8, 10) }
        p
          | By &nbsp;
          mixin author(article.metadata.author)
      section.content!= article.intro
        if article.hasMore
            p.read-more
                a(href=article.url) read more
  br
  a(href='archive.html')#archive Visit the archives!
